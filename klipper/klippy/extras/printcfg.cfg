[gcode_macro _printcfg_tester]
gcode:
    ## Define color-wrapper
    {% set ns = namespace() %}
    {% macro color_text(text='', color='primary') -%}
        {% set color = color | string %}
        {% set text = text | string  %}
        {% set ns.out = '<span class=' + color + '--text>' + text + '</span>'|string %}
    {% endmacro -%}    
    {% if printer.printcfg.leds is defined %}
        {% set leds = printer.printcfg.leds|string %}
    {% else %}
        {% set leds = "None" %}
    {% endif %}
    {% if printer.printcfg.park_x is defined %}
        {% set parkx = printer.printcfg.park_x|float %}
    {% else %}
        {% set parkx = "None" %}
    {% endif %}
    {% if printer.printcfg.park_y is defined %}
        {% set parky = printer.printcfg.park_y|float %}
    {% else %}
        {% set parky = "None" %}
    {% endif %}

    # Welcome message
    { color_text(color="success", text="Welcome to the ") }
    {% set msg = ns.out %}
    { color_text(color="error", text="PrintCFG ") }
    {% set msg = msg+ ns.out %}
    { color_text(color="success", text="Tester!") }
    {% set msg = msg+ ns.out %}
    { color_text(color="warning", text="\nThis macro will test your PrintCFG settings.") }
    {% set msg = msg+ ns.out %}
    { action_respond_info( msg ) }
    ## Output printcfg config state
    { color_text(color="info", text="Configured LEDs: {}".format(leds)) }
    {% set msg = ns.out %}
    { action_respond_info( msg ) }
    { color_text(color="info", text="Configured Parking Position: {},{}".format( parkx, parky )) }
    {% set msg = ns.out %}
    { action_respond_info( msg ) }

    # Welcome to the rainbow
    { color_text(color="secondary", text="Welcome to the ") }
    {% set msg = ns.out %}
    { color_text(color="accent", text="R") }
    {% set msg = msg+ ns.out %}
    { color_text(color="error", text="A") }
    {% set msg = msg+ ns.out %}
    { color_text(color="warning", text="I") }
    {% set msg = msg+ ns.out %}
    { color_text(color="success", text="N") }
    {% set msg = msg+ ns.out %}
    { color_text(color="info", text="B") }
    {% set msg = msg+ ns.out %}
    { color_text(color="primary", text="O") }
    {% set msg = msg+ ns.out %}
    { color_text(color="accent", text="W") }
    {% set msg = msg+ ns.out %}
    { action_respond_info( msg ) }
